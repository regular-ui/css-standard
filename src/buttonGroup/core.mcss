// Component:       `u-btngroup`
// ========================================================================

.u-btngroup {
    // - 和button一致 | Behave like buttons
    display: inline-block;
    vertical-align: middle;
    white-space: nowrap;
    @extend .f-lsi;

    > .u-btn {
        position: relative;
    }

    > .u-btn:hover, > .u-btn:focus, > .u-btn:active, > .u-btn.z-act {
        z-index: 2;
    }
}



// Extends:         `u-btn-horizontal`
// ========================================================================

$u-btngroup-horizontal = ($border-width = null) {
    .u-btngroup-horizontal {
        @if($border-width) {
            > .u-btn + .u-btn {
                margin-left: -$border-width;
            }
        }

        > .u-btn:not(:first-child):not(:last-child) {
            $border-radius: 0;
        }

        > .u-btn:first-child:not(:last-child) {
            $border-radius: 0, right;
        }

        > .u-btn:last-child:not(:first-child) {
            $border-radius: 0, left;
        }
    }
}



// Extends:         `u-btn-vertical`
// ========================================================================

$u-btngroup-vertical = ($border-width = null) {
    .u-btngroup-vertical {
        > .u-btn {
            display: block;
            width: 100%;
        }

        @if ($border-width) {
            > .u-btn + .u-btn {
                margin-top: -$border-width;
            }
        }

        > .u-btn:not(:first-child):not(:last-child) {
            $border-radius: 0;
        }

        > .u-btn:first-child:not(:last-child) {
            $border-radius: 0, bottom;
        }

        > .u-btn:last-child:not(:first-child) {
            $border-radius: 0, top;
        }
    }
}
